<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
  'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='modelo.dao.mappers.ProductoMapper'>

	<resultMap type="ProductoPojo" id="datosProducto">
		<id property='id' column='id' />
		<result property='titulo' column='titulo' />
		<result property='anyo' column='anyo' />
		<result property='precio' column='precio' />
		<result property='stock' column='stock' />
		<result property='descripcion' column='descripcion' />
		<result property='foto' column='foto' />
		<result property='idGenero' column='idGenero' />
		<result property='idPlataforma' column='idPlataforma' />
	</resultMap>


	<resultMap type="BusquedaPojo" id="nombreProducto">
		<id property='id' column='id' />
		<result property='titulo' column='titulo' />
		<result property='anyo' column='anyo' />
		<result property='precio' column='precio' />
		<result property='descripcion' column='descripcion' />
		<result property='genero' column='genero' />
		<result property='plataforma' column='plataforma' />
	</resultMap>

	<select id="BuscarProductoporNombre" resultMap="nombreProducto">

		select
		productos.titulo as titulo,productos.anyo as anyo, productos.precio
		as
		precio ,productos.descripcion as descripcion,
		generos.nombre as genero
		, plataformas.nombre as plataforma,productos.id as id

		from
		productos,plataformas,generos

		where
		productos.idPlataforma =
		plataformas.id
		and
		productos.idGenero = generos.id
		and
		productos.titulo
		like '%' #{titulo}
		'%';
	</select>


	<resultMap type="ProductoTienda" id="tiendaProducto">
		<id property='id' column='id' />
		<result property='titulo' column='titulo' />
		<result property='anyo' column='anyo' />
		<result property='precio' column='precio' />
		<result property='stock' column='stock' />
		<result property='descripcion' column='descripcion' />
		<result property='foto' column='foto' />
		<result property='genero' column='genero' />
		<result property='plataforma' column='plataforma' />
		<result property='comentario' column='comentarios' />
		<result property='valoracion' column='valoraciones' />
		<result property="usuario" column="usuarios" />
		<result property="fotoUsuario" column="fotoUsuario" />

	</resultMap>


	<select id="leerTotalProductosMedia" resultMap="tiendaProducto">
		SELECT
		round(AVG(v.valoraciones))as valoraciones ,p.titulo as titulo,p.foto
		as foto ,p.id as id ,p.precio as precio
		FROM
		valoraciones v
		INNER JOIN
		productos p ON p.id = v.idProducto
		GROUP BY v.idProducto
		having
		avg(v.valoraciones)>=7 limit 4 ;



	</select>

	<select id="BuscarProductoporNombreTienda"
		resultMap="tiendaProducto">
		select
		productos.titulo as titulo,productos.anyo as anyo,
		productos.precio
		as
		precio ,productos.stock as
		stock,productos.descripcion as
		descripcion,productos.foto as foto,
		generos.nombre as genero
		,
		plataformas.nombre as plataforma,productos.id
		as
		id,valoraciones.valoraciones as valoraciones
		,comentarios.comentarios
		as comentarios

		from
		productos,plataformas,generos,valoraciones,comentarios
		where
		productos.idPlataforma = plataformas.id and productos.idGenero =
		generos.id and
		valoraciones.idProducto = productos.id and
		comentarios.idProducto =
		productos.id and
		productos.titulo like '%'
		#{titulo}
		'%';
	</select>

	<select id="leerProductos" resultMap="datosProducto">
		select
		productos.titulo,productos.anyo,productos.precio,productos.descripcion,productos.foto,
		productos.idGenero,productos.idPlataforma,productos.id,
		productos.stock
		from
		productos
		where
		productos.id=#{id}

	</select>


	<select id="leerProductosCategoriaid" resultMap="datosProducto">
		select
		productos.titulo,productos.anyo,productos.precio,productos.descripcion,productos.foto,
		productos.idGenero,productos.idPlataforma,productos.id,
		productos.stock
		from
		productos
		where
		productos.idPlataforma =#{id}

	</select>


	<select id="contarProductoCategoria" resultMap="tiendaProducto">
		select
		count(productos.titulo) as titulo
		from
		plataformas,productos
		where
		plataformas.id = productos.idPlataforma and
		productos.idPlataforma =#{id}

	</select>


	<select id="leerCategoriaId" resultMap="datosProducto">
		select
		*
		from
		plataformas,productos
		where
		plataformas.id = productos.idPlataforma and
		plataformas.id=#{id}

	</select>

	<select id="leerProductosTienda" resultMap="tiendaProducto">
		select
		productos.titulo as titulo,productos.anyo as anyo, productos.precio
		as
		precio
		,productos.stock as stock,productos.descripcion as
		descripcion,productos.foto as foto,
		generos.nombre as genero
		,
		plataformas.nombre as plataforma,productos.id

		from
		productos,plataformas,generos
		where
		productos.idPlataforma =
		plataformas.id and productos.idGenero = generos.id
		and
		productos.id
		=#{id}

	</select>





	<select id="leerTotalProductos" resultMap="datosProducto">
		select
		productos.titulo,productos.anyo,productos.precio,productos.descripcion,productos.foto,productos.id,productos.stock
		from
		productos
	</select>

	<select id="leerTotalTienda" resultMap="tiendaProducto">
		SELECT
		round(AVG(v.valoraciones))as valoraciones ,p.titulo as titulo ,p.foto
		as foto,p.id as id ,p.precio
		as precio,p.stock as stock
		FROM
		valoraciones v
		INNER JOIN productos p ON p.id = v.idProducto
		GROUP BY
		v.idProducto;

	</select>


	<select id="leerTotalCategorias" resultType="CategoriaPojo">
		select
		*
		from
		plataformas
	</select>

	<select id="leerTotalMarcas" resultType="MarcaPojo">
		select
		*
		from
		generos
	</select>

	<delete id="eliminarProducto">

		DELETE FROM productos where productos.id = #{id}
	</delete>


	<update id='updateProducto' parameterType='ProductoPojo'>
		UPDATE
		productos
		SET

		titulo = #{titulo},
		precio = #{precio},
		stock = #{stock},
		anyo = #{anyo},
		foto =#{foto},
		descripcion = #{descripcion},
		idGenero =#{idGenero},
		idPlataforma =
		#{idPlataforma}
		WHERE productos.id = #{id}
	</update>

	<insert id='insertProducto' parameterType='ProductoPojo'
		useGeneratedKeys='true' keyProperty='id'>
		insert into productos
		(titulo,precio,anyo,stock,foto,descripcion,idGenero,idPlataforma)
		VALUES(#{titulo}, #{precio},
		#{anyo},#{stock},
		#{foto}, #{descripcion},
		#{idGenero},
		#{idPlataforma})
	</insert>

</mapper>